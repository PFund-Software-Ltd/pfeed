[tool.poetry]
name = "pfeed"
version = "0.0.2"
description = "Data pipeline for algo-trading, getting and storing both real-time and historical data made easy."
license = "Apache-2.0"
authors = ["Stephen Yau <softwareentrepreneer+pfeed@gmail.com>"]
readme = "README.md"
homepage = "https://pfund.ai"
repository = "https://github.com/PFund-Software-Ltd/pfeed"
documentation = "https://pfeed-docs.pfund.ai"
keywords = ["trading", "algo-trading", "data pipeline", "ETL", "data lake", "data warehouse", "data integration", "historical data", "live data", "data streaming", "data engineering"]
classifiers = [
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Information Technology",
    "Topic :: Office/Business :: Financial",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Software Development :: Libraries",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
include = ['logging.yml', 'docker-compose.yml']

[tool.poetry.dependencies]
python = "^3.10"
pfund = "^0.0.2"
pandas = "^2.2.0"
polars = "^1.18.0"
yfinance = "^0.2.51"
pyarrow = "^17.0.0"
pydantic = "^2.9.2"
zstandard = "^0.23.0"
beautifulsoup4 = "^4.12.3"
psutil = {version = "^6.0.0", optional = true}
modin = {extras = ["all"], version = "^0.32.0", optional = true}
minio = {version = "^7.2.8", optional = true}
connectorx = {version = "^0.3.3", optional = true}
ray = {version = "^2.35.0", optional = true}
prefect = {version = "^3.0.5", optional = true}
bytewax = {version = "^0.21.0", optional = true}
confluent-kafka = {version = "^2.5.3", optional = true}
databento = {version = "^0.43.0", optional = true}
polygon-api-client = {version = "^1.14.2", optional = true}
dask = {extras = ["complete", "dataframe"], version = "^2024.12.1", optional = true}
pyspark = {extras = ["connect", "pandas-on-spark", "sql"], version = "^3.5.3", optional = true}
litellm = {version = "^1.51.0", optional = true}

[tool.poetry.extras]
core = [
    "psutil", "modin", "minio", "connectorx",
    "ray", "prefect", "bytewax", "confluent-kafka", 
]
databento = ["databento"]
polygon = ["polygon-api-client"]
dask = ["dask"]
spark = ["pyspark"]
llm = ["litellm"]
all = [
    "psutil", "modin", "pyarrow", "minio", "connectorx", "ray", "prefect", "bytewax", "confluent-kafka",  # core
    "databento", "polygon-api-client",  # data sources
    "dask", "pyspark",  # dataframes
    "litellm"  # plugins
]

[tool.poetry.scripts]
pfeed = "pfeed.main:run_cli"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pfund = {path = "../pfund", develop = true}
mypy = "^1.11.2"
ruff = "^0.6.9"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^8.3.3"
pytest-cov = "^6.0.0"
pytest-mock = "^3.14.0"
pytest-xdist = "^3.6.1"
tox = "^4.23.2"
faker = "^33.1.0"
bandit = "^1.7.10"
pre-commit = "^4.0.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
