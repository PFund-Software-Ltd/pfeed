[project]
name = "pfeed"
version = "0.0.5"
description = "Data pipeline for algo-trading, getting and storing both real-time and historical data made easy."
license = "Apache-2.0"
authors = [
    {name = "Stephen Yau", email = "softwareentrepreneer+pfeed@gmail.com"}
]
readme = "README.md"
keywords = ["trading", "algo-trading", "data pipeline", "ETL", "data lake", "data warehouse", "data integration", "historical data", "live data", "data streaming", "data engineering"]
classifiers = [
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Information Technology",
    "Topic :: Office/Business :: Financial",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Software Development :: Libraries",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
]
requires-python = ">=3.11"
dependencies = [
    "pfund>=0.0.2",
    "tqdm>=4.67.1",
    "pandas>=2.3.2",
    "polars>=1.33.1",
    "pyarrow>=21.0.0",
    "pandera>=0.26.1",
    "msgspec>=0.19.0",
    "pydantic>=2.11.7",
    "narwhals>=2.5.0",
    "zstandard>=0.24.0", # REVIEW: this is included in python 3.14
    "beautifulsoup4>=4.13.5",
    "cloudpathlib[s3,gs,azure]>=0.22.0",
    "fmp-api-client>=0.0.1",
    # "databento>=0.63.0",
    # non-WASM-compatible dependencies
    "yfinance>=0.2.65",
    "ray>=2.49.1",
    "pyzmq>=27.1.0",
    "minio>=7.2.16",
    "deltalake>=1.1.4",
]

[project.optional-dependencies]
prefect = ["prefect>=3.4.17"]
# polars-cloud = ["polars-cloud>=0.1.4"]
dask = ["dask[complete,dataframe]>=2025.9.0"]
# coiled = ["coiled>=1.118.4"]
spark = ["pyspark[connect,pandas-on-spark,sql]>=4.0.1"]
duckdb = ["duckdb>=1.3.2"]
lancedb = ["lancedb>=0.25.0"]
# postgresql = ["psycopg[binary,pool]>=3.2.10"]
# kafka = ["confluent-kafka>=2.8.2"]
# polygon = ["polygon-api-client>=1.14.6"]

[project.scripts]
pfeed = "pfeed.main:run_cli"

[project.urls]
homepage = "https://pfund.ai"
repository = "https://github.com/PFund-Software-Ltd/pfeed"
documentation = "https://pfeed-docs.pfund.ai"

[dependency-groups]
dev = [
    "ruff>=0.13.0",
    "pre-commit>=4.3.0",
    "commitizen>=4.9.1",
    "python-semantic-release>=10.4.1",
    "pdoc>=15.0.4",
]

[build-system]
requires = ["uv_build>=0.8.17,<0.9.0"]
build-backend = "uv_build"

[tool.uv.build-backend]
module-name = "pfeed"
module-root = ""

[tool.uv.sources]
pfund = { path = "../pfund", editable = true }
fmp-api-client = { path = "../fmp-api-client", editable = true }

# [build-system]
# requires = ["hatchling"]
# build-backend = "hatchling.build"

# [tool.hatch.build.targets.sdist]
# include = ['/pfeed', 'logging.yml', 'docker-compose.yml']

# [tool.hatch.build.targets.wheel]
# include = ['/pfeed', 'logging.yml', 'docker-compose.yml']
